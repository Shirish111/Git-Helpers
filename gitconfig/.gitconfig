[user]
	email = _________
	name = _________

[core]
	editor = vim

[color]
	ui = true

[alias]
	# Add
	a = add
	ad = add .
	au = add -u .

	# Branch
	b = branch
	bd = branch -v --sort=-committerdate
	br = branch -m
	bdel = branch -d
	bdelf = branch -D
	bdelrem = !git push origin --delete
	cb = branch --show-current

	# Checkout
	co = checkout
	com = checkout master
	cod = checkout dev
	cob = checkout -b

	# Merge
	m = merge
	ms = merge --squash
	ma = merge --abort
	mnn = merge --no-ff --no-commit

	# Commit
	c = commit
	ac = commit -a
	ca = commit --amend
	cm = commit -m
	acm = commit -am
	aca = commit --amend
	cam = commit --amend -m
	aca = commit --amend -a
	acam = commit --amend -am
	cem = commit --allow-empty -m
	cn = commit --no-edit
	acn = commit --no-edit
	acan = commit --amend -a --no-edit
	can = commit --amend --no-edit

	# Diff
	d = diff
	dc = diff --cached
	df = diff --name-only
	dcf = diff --cached --name-only
	d1 = diff HEAD~1 HEAD
	d2 = diff HEAD~2 HEAD~1



	# push
	p = !git push origin $(git cb):$(git cb)
	pf = !git push origin -f $(git cb):$(git cb)
	pa = push --all
	pl = !git pull origin $(git cb):$(git cb)
	plf = !git pull origin -f $(git cb):$(git cb)
	
	# fetch
	f = !git fetch origin $(git cb):$(git cb)
	fa = fetch --all
	
	# Status
	s = status
	
	# Cherry pick
	cp = cherry-pick
	cpn = cherry-pick --no-commit
	

	# Reset
	r = reset
	rs = reset --soft
	rh = reset --hard
	rs1 = reset --soft HEAD~1
	rs2 = reset --soft HEAD~2
	rh1 = reset --hard HEAD~1
	rh2 = reset --hard HEAD~2



	# Clean
	cl = clean -f
	cld = clean -fd
	
	# Stash
	st = stash
	stp = stash push
	sta = stash apply
	stpop = stash pop
	sts = stash show -p
	stsf = stash show
	stl = stash list
	std = stash drop

	# Reflog
	rf = reflog

	# log
	l = log
	la = log --all
	lf = log -p
	laf = log --all -p
	lp = log --graph --oneline --decorate --all
	l1 = log -1
	l2 = log -2
	l1m = log --pretty=format:%s -1
	l2m = !git log --pretty=format:%s -2 | tail -1;:

	# Custom
	## Checkout and pull branch
	cop = !git co $1 && git pl;:
	## Resolve push conflict for local commit
	pc1 = !git l1m | xsel --clipboard --input && git rs1 && git stp && git pl && git sta && git acm "$(xsel --clipboard --output)" && git p;:
